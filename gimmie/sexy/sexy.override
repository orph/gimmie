/* -*- Mode: C; c-basic-offset: 4 -*- */
%%
headers
#include <Python.h>

#define NO_IMPORT_PYGOBJECT
#include "pygobject.h"
#include <pygtk/pygtk.h>

#include <libsexy/sexy-enum-types.h>
#include <libsexy/sexy-icon-entry.h>
#include <libsexy/sexy-tooltip.h>

%%
modulename _sexy
%%
import gtk.gdk.Screen as PyGdkScreen_Type
import gtk.Entry as PyGtkEntry_Type
import gtk.Image as PyGtkImage_Type
import gtk.Widget as PyGtkWidget_Type
import gtk.Window as PyGtkWindow_Type
%%
override sexy_tooltip_position_to_rect kwargs

/* Stock pygdk_rectangle_from_pyobject crashes with (at least) PyGTK 2.6.8 */
static gboolean
_gimmie_pygdk_rectangle_from_pyobject(PyObject *object, GdkRectangle *rectangle)
{
    g_return_val_if_fail(rectangle != NULL, FALSE);

    if (pyg_boxed_check(object, GDK_TYPE_RECTANGLE)) {
	*rectangle = *pyg_boxed_get(object, GdkRectangle);
	return TRUE;
    }
    if (PyArg_ParseTuple(object, "iiii", &rectangle->x, &rectangle->y,
				&rectangle->width, &rectangle->height)) {
	return TRUE;
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError, "could not convert to GdkRectangle");
    return FALSE;
}

static PyObject *
_wrap_sexy_tooltip_position_to_rect(PyGObject *self, PyObject *args, PyObject *kwargs)
{
    static char *kwlist[] = { "rect", "screen", NULL };
    PyObject *py_rect;
    PyGObject *screen;
    GdkRectangle rect = { 0, 0, 0, 0 };

    if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO!:SexyTooltip.position_to_rect", kwlist, &py_rect, &PyGdkScreen_Type, &screen))
        return NULL;

    /* FIXME: Force the use of a newer version which does not crash */
    if (!_gimmie_pygdk_rectangle_from_pyobject(py_rect, &rect))
        return NULL;

    sexy_tooltip_position_to_rect(SEXY_TOOLTIP(self->obj), &rect, GDK_SCREEN(screen->obj));
    Py_INCREF(Py_None);
    return Py_None;
}
